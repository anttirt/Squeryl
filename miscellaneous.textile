---
layout: manual
title: <br/>
---

h2. Logging the generated Sql

The org.squeryl.Query.statement method returns the statement with the jdbc's prepared
statement parameters subsituted.

To log all SQL activity of a sesson, use org.squeryl.Session.currentSession.setLogger(String => Unit)
the closure receives all Sql statements and gets to do what it wants with it.


h2. Implicit conversions for single row agregate queries

In Sql, queries that consist of only agregate functions (without group by clause) 
always return exactly one row. Squeryl allows you to implicitely convert them to tupes 
or to a scalar, as following example illustrates :

<script type="syntaxhighlighter" class="brush: scala"><![CDATA[
    
  val x:Float = from(aTable)(t=> compute(avg(t.anInt)))
  
  val t:(Float,String) = from(aTable)(t=> compute(avg(t.anInt), min(t.aString)))
  
]]></script>

Instead of the (slightly) more verbose way :

<script type="syntaxhighlighter" class="brush: scala"><![CDATA[
    
  val x:Float = from(aTable)(t=> compute(avg(t.anInt))).single._1
  
  val t:(Float,String) = from(aTable)(t=> compute(avg(t.anInt), min(t.aString))).single
  
]]></script>

h2. Is an object persisted ?

The trait : *org.squeryl.PersistenceStatus* when mixed in a class provides the *isPersisted* method, it is extended by KeyedEntity[K]. 
